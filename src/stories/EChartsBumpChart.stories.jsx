import React, { useEffect, useRef } from 'react';
import * as echarts from 'echarts';

export default {
  title: 'Charts/ECharts Bump Chart',
  argTypes: {
    title: { control: 'text', defaultValue: 'Rankings Over Time' },
    darkMode: { control: 'text', defaultValue: 'auto' },
    color: { control: 'object', defaultValue: ['#5540e1', '#ce7afd', '#82ecff', '#ffbf51', '#14868f', '#cc224b', '#121224', '#ece3fd'] },
    textStyle: { control: 'object', defaultValue: { fontFamily: 'sans-serif', fontSize: 12, fontStyle: 'normal', fontWeight: 'normal' } },
    animation: { control: 'text', defaultValue: 'auto' },
    animationDuration: { control: 'number', defaultValue: 1000 },
    animationDurationUpdate: { control: 'number', defaultValue: 500 },
    animationEasing: { control: 'text', defaultValue: 'cubicInOut' },
    animationEasingUpdate: { control: 'text', defaultValue: 'cubicInOut' },
    width: { control: 'number', defaultValue: 900 },
    height: { control: 'number', defaultValue: 600 },
    xAxis: { control: 'object', defaultValue: [{
      show: true,
      type: 'category',
      name: 'Month',
      nameLocation: 'middle',
      nameTextStyle: { fontWeight: 'bold', fontSize: 14 },
      nameGap: 30,
      nameRotate: 0,
      axisLine: { show: true, lineStyle: { color: '#333' } },
      axisTick: { show: true },
      axisLabel: { show: true, fontSize: 12 },
      splitLine: { show: false },
      splitArea: { show: false },
      min: null,
      max: null,
      interval: 1,
      boundaryGap: false,
      inverse: false,
      position: 'bottom',
      offset: 0,
      alignTicks: false,
      scale: false,
      z: 0,
      zlevel: 0,
      gridIndex: 0,
      data: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul']
    }] },
    yAxis: { control: 'object', defaultValue: [{
      show: true,
      type: 'value',
      name: 'Rank',
      nameLocation: 'middle',
      nameTextStyle: { fontWeight: 'bold', fontSize: 14 },
      nameGap: 40,
      nameRotate: 90,
      axisLine: { show: true, lineStyle: { color: '#333' } },
      axisTick: { show: true },
      axisLabel: { show: true, fontSize: 12 },
      splitLine: { show: true, lineStyle: { type: 'dashed' } },
      splitArea: { show: false },
      min: 1,
      max: 7,
      interval: 1,
      boundaryGap: [0, 0],
      inverse: true,
      position: 'left',
      offset: 0,
      alignTicks: false,
      scale: false,
      z: 0,
      zlevel: 0,
      gridIndex: 0
    }] },
    grid: { control: 'object', defaultValue: [{ left: 60, right: 60, top: 60, bottom: 60 }] },
    legend: { control: 'object', defaultValue: { data: ['Overall Score', 'Staff Friendliness', 'Store Cleanliness', 'Product Variety', 'Pricing', 'Ease of Navigation', 'Store Layout'] } },
    tooltip: { control: 'object', defaultValue: { trigger: 'axis' } },
    series: { control: 'object', defaultValue: [
      { name: 'Overall Score', type: 'line', symbol: 'circle', symbolSize: 12, lineStyle: { width: 4 }, emphasis: { focus: 'series' }, data: [1, 2, 2, 3, 1, 2, 1] },
      { name: 'Staff Friendliness', type: 'line', symbol: 'circle', symbolSize: 12, lineStyle: { width: 4 }, emphasis: { focus: 'series' }, data: [2, 1, 1, 1, 2, 1, 2] },
      { name: 'Store Cleanliness', type: 'line', symbol: 'circle', symbolSize: 12, lineStyle: { width: 4 }, emphasis: { focus: 'series' }, data: [3, 3, 3, 2, 3, 3, 3] },
      { name: 'Product Variety', type: 'line', symbol: 'circle', symbolSize: 12, lineStyle: { width: 4 }, emphasis: { focus: 'series' }, data: [4, 4, 4, 4, 4, 4, 4] },
      { name: 'Pricing', type: 'line', symbol: 'circle', symbolSize: 12, lineStyle: { width: 4 }, emphasis: { focus: 'series' }, data: [5, 5, 5, 5, 5, 5, 5] },
      { name: 'Ease of Navigation', type: 'line', symbol: 'circle', symbolSize: 12, lineStyle: { width: 4 }, emphasis: { focus: 'series' }, data: [6, 6, 6, 6, 6, 6, 6] },
      { name: 'Store Layout', type: 'line', symbol: 'circle', symbolSize: 12, lineStyle: { width: 4 }, emphasis: { focus: 'series' }, data: [7, 7, 7, 7, 7, 7, 7] },
    ] },
  },
};

const EChartsBumpChart = ({ title, width = 900, height = 600, ...rest }) => {
  const chartRef = useRef(null);

  useEffect(() => {
    const option = {
      title: { text: title },
      darkMode: rest.darkMode,
      color: rest.color,
      textStyle: rest.textStyle,
      animation: rest.animation,
      animationDuration: rest.animationDuration,
      animationDurationUpdate: rest.animationDurationUpdate,
      animationEasing: rest.animationEasing,
      animationEasingUpdate: rest.animationEasingUpdate,
      xAxis: rest.xAxis,
      yAxis: rest.yAxis,
      grid: rest.grid,
      legend: rest.legend,
      tooltip: rest.tooltip,
      series: rest.series,
    };
    const chart = echarts.init(chartRef.current);
    chart.setOption(option);
    return () => chart.dispose();
  }, [title, rest]);

  return <div ref={chartRef} style={{ width, height }} />;
};

export const Basic = EChartsBumpChart.bind({});
Basic.args = {
  title: 'Rankings Over Time',
  darkMode: 'auto',
  color: ['#5540e1', '#ce7afd', '#82ecff', '#ffbf51', '#14868f', '#cc224b', '#121224', '#ece3fd'],
  textStyle: { fontFamily: 'sans-serif', fontSize: 12, fontStyle: 'normal', fontWeight: 'normal' },
  animation: 'auto',
  animationDuration: 1000,
  animationDurationUpdate: 500,
  animationEasing: 'cubicInOut',
  animationEasingUpdate: 'cubicInOut',
  width: 900,
  height: 600,
  xAxis: [{
    show: true,
    type: 'category',
    name: 'Month',
    nameLocation: 'middle',
    nameTextStyle: { fontWeight: 'bold', fontSize: 14 },
    nameGap: 30,
    nameRotate: 0,
    axisLine: { show: true, lineStyle: { color: '#333' } },
    axisTick: { show: true },
    axisLabel: { show: true, fontSize: 12 },
    splitLine: { show: false },
    splitArea: { show: false },
    min: null,
    max: null,
    interval: 1,
    boundaryGap: false,
    inverse: false,
    position: 'bottom',
    offset: 0,
    alignTicks: false,
    scale: false,
    z: 0,
    zlevel: 0,
    gridIndex: 0,
    data: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul']
  }],
  yAxis: [{
    show: true,
    type: 'value',
    name: 'Rank',
    nameLocation: 'middle',
    nameTextStyle: { fontWeight: 'bold', fontSize: 14 },
    nameGap: 40,
    nameRotate: 90,
    axisLine: { show: true, lineStyle: { color: '#333' } },
    axisTick: { show: true },
    axisLabel: { show: true, fontSize: 12 },
    splitLine: { show: true, lineStyle: { type: 'dashed' } },
    splitArea: { show: false },
    min: 1,
    max: 7,
    interval: 1,
    boundaryGap: [0, 0],
    inverse: true,
    position: 'left',
    offset: 0,
    alignTicks: false,
    scale: false,
    z: 0,
    zlevel: 0,
    gridIndex: 0
  }],
  grid: [{ left: 60, right: 60, top: 60, bottom: 60 }],
  legend: { data: ['Overall Score', 'Staff Friendliness', 'Store Cleanliness', 'Product Variety', 'Pricing', 'Ease of Navigation', 'Store Layout'] },
  tooltip: { trigger: 'axis' },
  series: [
    { name: 'Overall Score', type: 'line', symbol: 'circle', symbolSize: 12, lineStyle: { width: 4 }, emphasis: { focus: 'series' }, data: [1, 2, 2, 3, 1, 2, 1] },
    { name: 'Staff Friendliness', type: 'line', symbol: 'circle', symbolSize: 12, lineStyle: { width: 4 }, emphasis: { focus: 'series' }, data: [2, 1, 1, 1, 2, 1, 2] },
    { name: 'Store Cleanliness', type: 'line', symbol: 'circle', symbolSize: 12, lineStyle: { width: 4 }, emphasis: { focus: 'series' }, data: [3, 3, 3, 2, 3, 3, 3] },
    { name: 'Product Variety', type: 'line', symbol: 'circle', symbolSize: 12, lineStyle: { width: 4 }, emphasis: { focus: 'series' }, data: [4, 4, 4, 4, 4, 4, 4] },
    { name: 'Pricing', type: 'line', symbol: 'circle', symbolSize: 12, lineStyle: { width: 4 }, emphasis: { focus: 'series' }, data: [5, 5, 5, 5, 5, 5, 5] },
    { name: 'Ease of Navigation', type: 'line', symbol: 'circle', symbolSize: 12, lineStyle: { width: 4 }, emphasis: { focus: 'series' }, data: [6, 6, 6, 6, 6, 6, 6] },
    { name: 'Store Layout', type: 'line', symbol: 'circle', symbolSize: 12, lineStyle: { width: 4 }, emphasis: { focus: 'series' }, data: [7, 7, 7, 7, 7, 7, 7] },
  ],
}; 