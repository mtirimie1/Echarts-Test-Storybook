import React, { useEffect, useRef } from 'react';
import * as echarts from 'echarts';

export default {
  title: 'Charts/ECharts Line Chart',
  argTypes: {
    title: { control: 'object', defaultValue: { text: 'Overall Score Over Time', top: 30 } },
    darkMode: { control: 'text', defaultValue: 'auto' },
    color: { control: 'object', defaultValue: [
      '#5540e1',
      '#ce7afd',
      '#82ecff',
      '#ffbf51',
      '#14868f',
      '#cc224b',
      '#121224',
      '#ece3fd'
    ] },
    textStyle: { control: 'object', defaultValue: { fontFamily: 'sans-serif', fontSize: 12, fontStyle: 'normal', fontWeight: 'normal' } },
    animation: { control: 'text', defaultValue: 'auto' },
    animationDuration: { control: 'number', defaultValue: 1000 },
    animationDurationUpdate: { control: 'number', defaultValue: 500 },
    animationEasing: { control: 'text', defaultValue: 'cubicInOut' },
    animationEasingUpdate: { control: 'text', defaultValue: 'cubicInOut' },
    width: { control: 'number', defaultValue: 900 },
    height: { control: 'number', defaultValue: 600 },
    xAxis: { control: 'object', defaultValue: [{
      show: true,
      type: 'category',
      name: 'Month',
      nameLocation: 'middle',
      nameTextStyle: { fontWeight: 'bold', fontSize: 14 },
      nameGap: 30,
      nameRotate: 0,
      axisLine: { show: true, lineStyle: { color: '#333' } },
      axisTick: { show: true },
      axisLabel: { show: true, fontSize: 12 },
      splitLine: { show: false },
      splitArea: { show: false },
      min: null,
      max: null,
      interval: 1,
      boundaryGap: false,
      inverse: false,
      position: 'bottom',
      offset: 0,
      alignTicks: false,
      scale: false,
      z: 0,
      zlevel: 0,
      gridIndex: 0,
      data: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul']
    }] },
    yAxis: { control: 'object', defaultValue: [{
      show: true,
      type: 'value',
      name: 'Score',
      nameLocation: 'middle',
      nameTextStyle: { fontWeight: 'bold', fontSize: 14 },
      nameGap: 40,
      nameRotate: 90,
      axisLine: { show: true, lineStyle: { color: '#333' } },
      axisTick: { show: true },
      axisLabel: { show: true, fontSize: 12 },
      splitLine: { show: true, lineStyle: { type: 'dashed' } },
      splitArea: { show: false },
      min: null,
      max: null,
      interval: null,
      boundaryGap: [0, 0],
      inverse: false,
      position: 'left',
      offset: 0,
      alignTicks: false,
      scale: false,
      z: 0,
      zlevel: 0,
      gridIndex: 0
    }] },
    grid: { control: 'object', defaultValue: [{ left: 60, right: 150, top: 100, bottom: 60 }] },
    legend: {
      show: true,
      type: "plain",
      orient: "vertical",
      left: "auto",
      right: 0,
      top: 100,
      bottom: "auto",
      align: "auto",
      padding: 5,
      itemGap: 10,
      itemWidth: 25,
      itemHeight: 14,
      textStyle: {
        color: "#333",
        fontStyle: "normal",
        fontWeight: "normal",
        fontFamily: "sans-serif",
        fontSize: 12
      },
      backgroundColor: "transparent",
      borderColor: "#ccc",
      borderWidth: 1,
      borderRadius: 0,
      pageButtonItemGap: 5,
      pageButtonGap: 5,
      pageButtonPosition: "end",
      pageFormatter: "{current}/{total}",
      selector: false,
      selectorLabel: {
        show: true,
        distance: 5,
        fontSize: 12
      },
      selectorPosition: "auto",
      selectorItemGap: 7,
      selectorButtonGap: 10,
      z: 2,
      zlevel: 0,
      defaultValue: {
        left: -100
      }
    },
    tooltip: { control: 'object', defaultValue: { trigger: 'axis' } },
    series: { control: 'object', defaultValue: [
      { name: 'Overall Score', type: 'line', symbol: 'circle', symbolSize: 10, lineStyle: { width: 3 }, data: [93, 90, 90, 88, 95, 92, 94] },
      { name: 'Staff Friendliness', type: 'line', symbol: 'circle', symbolSize: 10, lineStyle: { width: 3 }, data: [90, 95, 95, 95, 92, 95, 92] },
      { name: 'Store Cleanliness', type: 'line', symbol: 'circle', symbolSize: 10, lineStyle: { width: 3 }, data: [88, 88, 88, 90, 88, 88, 88] },
      { name: 'Product Variety', type: 'line', symbol: 'circle', symbolSize: 10, lineStyle: { width: 3 }, data: [85, 85, 85, 85, 85, 85, 85] },
      { name: 'Pricing', type: 'line', symbol: 'circle', symbolSize: 10, lineStyle: { width: 3 }, data: [80, 80, 80, 80, 80, 80, 80] },
      { name: 'Ease of Navigation', type: 'line', symbol: 'circle', symbolSize: 10, lineStyle: { width: 3 }, data: [75, 75, 75, 75, 75, 75, 75] },
      { name: 'Store Layout', type: 'line', symbol: 'circle', symbolSize: 10, lineStyle: { width: 3 }, data: [70, 70, 70, 70, 70, 70, 70] },
    ] },
  },
};

const EChartsLineChart = ({ title, width = 900, height = 600, ...rest }) => {
  const chartRef = useRef(null);

  useEffect(() => {
    const option = {
      title: title,
      darkMode: rest.darkMode,
      color: rest.color,
      textStyle: rest.textStyle,
      animation: rest.animation,
      animationDuration: rest.animationDuration,
      animationDurationUpdate: rest.animationDurationUpdate,
      animationEasing: rest.animationEasing,
      animationEasingUpdate: rest.animationEasingUpdate,
      xAxis: rest.xAxis,
      yAxis: rest.yAxis,
      grid: rest.grid,
      legend: rest.legend,
      tooltip: rest.tooltip,
      series: rest.series,
    };
    const chart = echarts.init(chartRef.current);
    chart.setOption(option);
    return () => chart.dispose();
  }, [title, rest]);

  return <div ref={chartRef} style={{ width, height }} />;
};

export const Basic = EChartsLineChart.bind({});
Basic.args = {
  title: { text: 'Overall Score Over Time', top: 30 },
  darkMode: 'auto',
  color: [
    '#5540e1',
    '#ce7afd',
    '#82ecff',
    '#ffbf51',
    '#14868f',
    '#cc224b',
    '#121224',
    '#ece3fd'
  ],
  textStyle: { fontFamily: 'sans-serif', fontSize: 12, fontStyle: 'normal', fontWeight: 'normal' },
  animation: 'auto',
  animationDuration: 1000,
  animationDurationUpdate: 500,
  animationEasing: 'cubicInOut',
  animationEasingUpdate: 'cubicInOut',
  width: 900,
  height: 600,
  xAxis: [{
    show: true,
    type: 'category',
    name: 'Month',
    nameLocation: 'middle',
    nameTextStyle: { fontWeight: 'bold', fontSize: 14 },
    nameGap: 30,
    nameRotate: 0,
    axisLine: { show: true, lineStyle: { color: '#333' } },
    axisTick: { show: true },
    axisLabel: { show: true, fontSize: 12 },
    splitLine: { show: false },
    splitArea: { show: false },
    min: null,
    max: null,
    interval: 1,
    boundaryGap: false,
    inverse: false,
    position: 'bottom',
    offset: 0,
    alignTicks: false,
    scale: false,
    z: 0,
    zlevel: 0,
    gridIndex: 0,
    data: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul']
  }],
  yAxis: [{
    show: true,
    type: 'value',
    name: 'Score',
    nameLocation: 'middle',
    nameTextStyle: { fontWeight: 'bold', fontSize: 14 },
    nameGap: 40,
    nameRotate: 90,
    axisLine: { show: true, lineStyle: { color: '#333' } },
    axisTick: { show: true },
    axisLabel: { show: true, fontSize: 12 },
    splitLine: { show: true, lineStyle: { type: 'dashed' } },
    splitArea: { show: false },
    min: null,
    max: null,
    interval: null,
    boundaryGap: [0, 0],
    inverse: false,
    position: 'left',
    offset: 0,
    alignTicks: false,
    scale: false,
    z: 0,
    zlevel: 0,
    gridIndex: 0
  }],
  grid: [{ left: 60, right: 60, top: 100, bottom: 60 }],
  legend: {
    show: true,
    type: "plain",
    orient: "vertical",
    left: "auto",
    right: 0,
    top: 100,
    bottom: "auto",
    align: "auto",
    padding: 5,
    itemGap: 10,
    itemWidth: 25,
    itemHeight: 14,
    textStyle: {
      color: "#333",
      fontStyle: "normal",
      fontWeight: "normal",
      fontFamily: "sans-serif",
      fontSize: 12
    },
    backgroundColor: "transparent",
    borderColor: "#ccc",
    borderWidth: 1,
    borderRadius: 0,
    pageButtonItemGap: 5,
    pageButtonGap: 5,
    pageButtonPosition: "end",
    pageFormatter: "{current}/{total}",
    selector: false,
    selectorLabel: {
      show: true,
      distance: 5,
      fontSize: 12
    },
    selectorPosition: "auto",
    selectorItemGap: 7,
    selectorButtonGap: 10,
    z: 2,
    zlevel: 0,
    defaultValue: {
      left: -100
    }
  },
  tooltip: { trigger: 'axis' },
  series: [
    { name: 'Overall Score', type: 'line', symbol: 'circle', symbolSize: 10, lineStyle: { width: 3 }, data: [93, 90, 90, 88, 95, 92, 94] },
    { name: 'Staff Friendliness', type: 'line', symbol: 'circle', symbolSize: 10, lineStyle: { width: 3 }, data: [90, 95, 95, 95, 92, 95, 92] },
    { name: 'Store Cleanliness', type: 'line', symbol: 'circle', symbolSize: 10, lineStyle: { width: 3 }, data: [88, 88, 88, 90, 88, 88, 88] },
    { name: 'Product Variety', type: 'line', symbol: 'circle', symbolSize: 10, lineStyle: { width: 3 }, data: [85, 85, 85, 85, 85, 85, 85] },
    { name: 'Pricing', type: 'line', symbol: 'circle', symbolSize: 10, lineStyle: { width: 3 }, data: [80, 80, 80, 80, 80, 80, 80] },
    { name: 'Ease of Navigation', type: 'line', symbol: 'circle', symbolSize: 10, lineStyle: { width: 3 }, data: [75, 75, 75, 75, 75, 75, 75] },
    { name: 'Store Layout', type: 'line', symbol: 'circle', symbolSize: 10, lineStyle: { width: 3 }, data: [70, 70, 70, 70, 70, 70, 70] },
  ],
}; 